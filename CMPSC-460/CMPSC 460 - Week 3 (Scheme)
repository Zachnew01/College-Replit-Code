#| CMPSC 460 - Week 3 (1/22/24-1/24/24) Coding Examples |#

#| - Monday, 1/22/24 - |#

(define (fact n)
  (if (= n 1) 1
      (* n (fact (- n 1) ))
  )
)


(define (factA n res)
  (if (= n 0) res
      (factA (- n 1) (* n res))
  )
)

(define (sum lst)
  (if (null? lst) 0
      (+ (car lst) (sum (cdr lst)))
  )
)

(define (sumA lst res)
  (if (null? lst) res 
    (sumA (cdr lst) (+ (car lst) res)) 
  )	
)

#| - Wednesday, 1/24/24 - |#

; Map:
(define (sqr n)
  (* n n)
)

(define (double n)
  (* n 2)
)

(define (mapF func lst)
  (if (null? lst) '()
      (cons (func (car lst)) (mapF func (cdr lst)))
  )
)

; Filter:
(define (greaterThan5 n)
  (> n 5)
)

(define (even n)
  (= (mod n 2) 0)
)

(define (filter func lst)
  (if (null? lst) '()
      (if (func (car lst)) (cons (car lst) (filter func (cdr lst)))
          (filter func (cdr lst))
      )
  )
)

; Apply:
(define (add x y)
  (+ x y)
)

(define (applyF func lst)
  (if (null? (cdr lst)) (car lst)
      (func (car lst) (applyF func (cdr lst)))
  )
)

; Lambda:
(display ((lambda (x) (* x x)) 5))
(newline)

(display ((lambda(x y) (* x y)) 5 6) )
(newline)

(display ((lambda(x y z) (* (+ x y) z)) 5 6 3) )
(newline)

(display ((lambda(x) (* (+ x 1) (+ x 1))) 6))
(newline)
